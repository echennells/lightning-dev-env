upstream lnbits_backend {
    server lnbits-2:5000;
}

server {
    listen 443 ssl http2;
    server_name localhost lnbits.example.com;

    ssl_certificate /etc/ssl/certs/lnbits.crt;
    ssl_certificate_key /etc/ssl/certs/lnbits.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Buffer settings
    client_body_buffer_size 128k;
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Proxy settings that actually work with LNbits
    location / {
        proxy_pass http://lnbits_backend;

        # Forward Host header for LNURL compatibility (must include port)
        proxy_set_header Host $host:5443;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host:5443;
        proxy_set_header X-Forwarded-Port 5443;
        
        # HTTP version and connection
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Upgrade $http_upgrade;
        
        # Don't buffer requests/responses
        proxy_buffering off;
        proxy_request_buffering off;
        
        # Handle redirects by not rewriting them
        proxy_redirect off;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Allow all HTTP methods
        if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS|PATCH)$ ) {
            return 405;
        }
    }

    # Specific handling for auth endpoints
    location ~* ^/api/v1/auth {
        proxy_pass http://lnbits_backend;
        proxy_method $request_method;
        proxy_set_header Host $host:5443;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host:5443;
        proxy_set_header Content-Type $content_type;
        proxy_set_header Content-Length $content_length;
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_redirect off;
    }
}